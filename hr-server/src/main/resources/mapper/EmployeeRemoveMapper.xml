<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="fun.mizhuo.hrserver.mapper.EmployeeRemoveMapper">
  <resultMap id="BaseResultMap" type="fun.mizhuo.hrserver.model.EmployeeRemove">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="eid" jdbcType="INTEGER" property="eid" />
    <result column="afterDepId" jdbcType="INTEGER" property="afterDepId" />
    <result column="afterJobId" jdbcType="INTEGER" property="afterJobId" />
    <result column="removeDate" jdbcType="DATE" property="removeDate" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    id, eid, afterDepId, afterJobId, removeDate, reason, remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employeeremove
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from employeeremove
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="fun.mizhuo.hrserver.model.EmployeeRemove">
    insert into employeeremove (id, eid, afterDepId, 
      afterJobId, removeDate, reason, 
      remark)
    values (#{id,jdbcType=INTEGER}, #{eid,jdbcType=INTEGER}, #{afterDepId,jdbcType=INTEGER}, 
      #{afterJobId,jdbcType=INTEGER}, #{removeDate,jdbcType=DATE}, #{reason,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="fun.mizhuo.hrserver.model.EmployeeRemove">
    insert into employeeremove
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="eid != null">
        eid,
      </if>
      <if test="afterDepId != null">
        afterDepId,
      </if>
      <if test="afterJobId != null">
        afterJobId,
      </if>
      <if test="removeDate != null">
        removeDate,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="eid != null">
        #{eid,jdbcType=INTEGER},
      </if>
      <if test="afterDepId != null">
        #{afterDepId,jdbcType=INTEGER},
      </if>
      <if test="afterJobId != null">
        #{afterJobId,jdbcType=INTEGER},
      </if>
      <if test="removeDate != null">
        #{removeDate,jdbcType=DATE},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="fun.mizhuo.hrserver.model.EmployeeRemove">
    update employeeremove
    <set>
      <if test="eid != null">
        eid = #{eid,jdbcType=INTEGER},
      </if>
      <if test="afterDepId != null">
        afterDepId = #{afterDepId,jdbcType=INTEGER},
      </if>
      <if test="afterJobId != null">
        afterJobId = #{afterJobId,jdbcType=INTEGER},
      </if>
      <if test="removeDate != null">
        removeDate = #{removeDate,jdbcType=DATE},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="fun.mizhuo.hrserver.model.EmployeeRemove">
    update employeeremove
    set eid = #{eid,jdbcType=INTEGER},
      afterDepId = #{afterDepId,jdbcType=INTEGER},
      afterJobId = #{afterJobId,jdbcType=INTEGER},
      removeDate = #{removeDate,jdbcType=DATE},
      reason = #{reason,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>